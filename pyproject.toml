[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "pyansys-tools-report"
version = "0.3.2"
description = "Ansys tool for reporting your Python environment's package versions and hardware resources in a standardized way."
authors = [
     "ANSYS, Inc. <pyansys.support@ansys.com>",
]
maintainers = [
    "PyAnsys developers <pyansys.maintainers@ansys.com>",
]
readme = "README.md"
license = "MIT"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
homepage = "https://report.tools.docs.pyansys.com/"
repository = "https://github.com/pyansys/pyansys-tools-report"
packages = [
    { include = "ansys", from = "src" },
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/ansys/pyansys-tools-report/issues"

[tool.poetry.dependencies]
# Core dependencies
python = ">=3.7,<4.0"
importlib-metadata = {version = "^4.0", python = "<3.8"}
scooby = ">=0.5.12"
pyvista = ">=0.34.1"

# Optional dependencies
pytest = {version = "==7.1.2", optional = true}
pytest-cov = {version = "==3.0.0", optional = true}
Sphinx = {version = "==5.1.1", optional = true}
numpydoc = {version = "==1.4.0", optional = true}
ansys_sphinx_theme = {version = "==0.5.1", optional = true}
Sphinx-copybutton = {version = "==0.5.0", optional = true}
myst-parser = {version = "==0.18.0", optional = true}

[tool.poetry.extras]
test = ["pytest", "pytest-cov"]
doc = ["Sphinx", "numpydoc", "ansys_sphinx_theme", "Sphinx-copybutton", "myst-parser"]

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
force_sort_within_sections = true
line_length = 100
default_section = "THIRDPARTY"
src_paths = ["doc", "src"]
skip_glob = []

[tool.pytest.ini_options]
minversion = "7.1"
addopts = "-ra -q -v --cov=ansys.tools.report --cov-report term"
testpaths = [
    "tests",
]
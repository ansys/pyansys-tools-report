[{"objectID":"Home","href":"index.html#pyansys-tools-report","title":"PyAnsys Tools Report","text":"PyAnsys Tools Report"},{"objectID":"Home","href":"index.html#contents","title":"PyAnsys Tools Report > Contents","text":"Contents\n\n"},{"objectID":"Home","href":"index.html#readme-file","title":"PyAnsys Tools Report > README file","text":"README file\n\nFind here below the contents of the repository’s main README file."},{"objectID":"Home","href":"index.html#pyansys-tools-report","title":"PyAnsys Tools Report","text":"PyAnsys Tools Report\n\n\n\n\n\n\n\n\n\n\nAnsys tool for reporting your Python environment’s package versions and hardware resources in a standardized way."},{"objectID":"Home","href":"index.html#table-of-contents","title":"PyAnsys Tools Report > Table of contents","text":"Table of contents\n\nPyAnsys Tools Report\n\nTable of contents\n\nIntroduction\n\nDocumentation and issues\n\nHow does it work?\n\nInstallation\n\nStandard installation\n\nOffline installation\n\nRendering the docs\n\nRunning the tests\n\nRequirements"},{"objectID":"Home","href":"index.html#introduction","title":"PyAnsys Tools Report > Introduction","text":"Introduction\n\nThe PyAnsys Tools Report is a PyAnsys package to homogenize among all the different repositories\nthe output of system and environment reports related to Ansys products. Its main goals are:\n\nProvide an homogeneous output style to system and environment reports.\n\nAllows for customization when reporting Ansys variables and libraries.\n\nYou are welcome to help contribute to it in any possible way. Please submit an issue with\nany proposal you may have."},{"objectID":"Home","href":"index.html#documentation-and-issues","title":"PyAnsys Tools Report > Documentation and issues","text":"Documentation and issues\n\nSee the documentation page for more details.\n\nYou are welcome to help contribute to it in any possible way. Please submit\nhere an issue with\nany proposal you may have. This is the best place to post questions and code."},{"objectID":"Home","href":"index.html#how-does-it-work","title":"PyAnsys Tools Report > How does it work?","text":"How does it work?\n\nThis repository basically contains a simple Python package which you can import as follows\n(once installed):\n\nOnce imported, you can then start playing around with it:\n\nRefer to the online documentation to see the details of the module."},{"objectID":"Home","href":"index.html#installation","title":"PyAnsys Tools Report > Installation","text":"Installation\n\nThis package may be installed following two procedures: either the pip package manager installation or\nthe manual installation. The process to be followed for each of them is shown in the upcoming sections.\n\nThe pyansys-tools-report package currently supports Python >=3.10 on Windows, Mac OS, and Linux."},{"objectID":"Home","href":"index.html#standard-installation","title":"PyAnsys Tools Report > Standard installation","text":"Standard installation\n\nInstall the latest release from PyPi with:\n\nAlternatively, install the latest from GitHub via:\n\nFor a local “development” version, install with (requires pip >= 22.0):"},{"objectID":"Home","href":"index.html#offline-installation","title":"PyAnsys Tools Report > Offline installation","text":"Offline installation\n\nIf you lack an internet connection on your install machine, the recommended way\nof installing PyAnsys Tools Report is downloading the wheelhouse archive from the\nReleases Page for your\ncorresponding machine architecture.\n\nEach wheelhouse archive contains all the python wheels necessary to install\nPyAnsys Tools Report from scratch on Windows and Linux for Python >=3.10. You can install\nthis on an isolated system with a fresh python or on a virtual environment.\n\nFor example, on Linux with Python 3.10, unzip it and install it with the following:\n\nIf you’re on Windows with Python 3.10, unzip to a wheelhouse directory and\ninstall using the same command as before.\n\nConsider installing using a virtual environment.\nMore information on general PyAnsys development can be found in the\nPyAnsys Developer’s Guide."},{"objectID":"Home","href":"index.html#rendering-the-docs","title":"PyAnsys Tools Report > Rendering the docs","text":"Rendering the docs\n\nIn case you were interested in rendering the docs locally, you need to clone the repository and\ninstall the docs requirements first:\n\nOnce you have the requirements, render the docs by running the following:\n\nThis generates the HTML version of the docs, which you may find in the following directory:\n\nYou can also clean the build directory by running the following command:"},{"objectID":"Home","href":"index.html#running-the-tests","title":"PyAnsys Tools Report > Running the tests","text":"Running the tests\n\nIn case you were interested in running the tests locally, you need to clone the repository and\ninstall the test requirements first:\n\nOnce you have the requirements, run the tests by running the following:\n\nThe pyproject.toml file already contains some default configuration for running the tests. Please,\ntake a look at it if you may want to run it with your own configuration."},{"objectID":"Home","href":"index.html#requirements","title":"PyAnsys Tools Report > Requirements","text":"Requirements\n\nThis Python package does not contain specific requirements files. Instead, its requirements may\nbe found within the pyproject.toml file which defines the package. Thus, when the package is\ninstalled it automatically detects the dependencies needed and installs them."},{"objectID":"Home","href":"user_guide/index.html#user-guide","title":"User guide","text":"User guide\n\nThis section explains how to use pyansys-tools-report and its features."},{"objectID":"Home","href":"user_guide/index.html#using-pyansys-tools-report","title":"User guide > Using PyAnsys Tools Report","text":"Using PyAnsys Tools Report\n\nOnce the pyansys-tools-report package is installed in your own personal environment (if not, please proceed\nto ref_getting_started), you can start importing the package and using it.\n\nIn order to import the package, please run:\n\nThe pyansys-tools-report contains a main class called Report. This class is basically an extension of the\nscooby.Report, but customized for showing Ansys libraries and variables in a common format.\n\nThe possible arguments that the Report class accepts can be found in the ref_index_api. PLease, have a look\nat it to understand the arguments you may use. A simple example of Ansys variables and libraries is shown below.\n\nThe typical output of a Report would look as follows:\n\nBy default, the Report class would look for a certain set of environment variables. The following\nstrings are searched for in the available environment variables. If any match is found, they are included\nin the report:\n\nAWP_ROOT\n\nANS\n\nMAPDL\n\nFLUENT\n\nAEDT\n\nDPF\n\nAlso, several Python packages are reported by default. The set of reported packages always includes\nthe following list:\n\nansys-mapdl-core\n\nansys-dpf-core\n\nansys-dpf-post\n\nansys-dpf-gate\n\nansys-fluent-core\n\npyaedt\n\nansys-platform-instancemanagement\n\nansys-grantami-bomanalytics\n\nansys-openapi-common\n\nansys-mapdl-reader\n\nansys-fluent-visualization\n\nansys-fluent-parametric\n\nansys-sphinx-theme\n\nansys-seascape\n\npyansys-tools-report\n\npyansys-tools-versioning\n\nmatplotlib\n\nnumpy\n\npyvista\n\nappdirs\n\ntqdm\n\npyiges\n\nscipy\n\ngrpc\n\ngoogle.protobuf\n\nIf you want the Report class to look for some extra environment variables by default, please\nraise an issue.\n\nEnjoy its use. If you have any doubts, please raise a question/issue in the\nPyAnsys Tools Report Issues site."},{"objectID":"Contributing","href":"contributing.html#contributing","title":"Contributing","text":"Contributing\n\nGuidance on contributing to a PyAnsys library appears in the\nContributing topic\nin the PyAnsys Developer’s Guide. Ensure that you are thoroughly familiar with\nit before attempting to contribute to the PyAnsys Tools Report repository.\n\nThe following contribution information is specific to the PyAnsys Tools Report repository."},{"objectID":"Contributing","href":"contributing.html#cloning-the-pyansys-tools-report-repository","title":"Contributing > Cloning the PyAnsys Tools Report repository","text":"Cloning the PyAnsys Tools Report repository\n\nRun this code to clone and install the latest version of the repository in development\nmode:\n\nIn case of looking for the test requirements, run the following:"},{"objectID":"Contributing","href":"contributing.html#building-documentation","title":"Contributing > Building documentation","text":"Building documentation\n\nTo build the documentation locally you need to follow these steps at the root\ndirectory of the repository:\n\nAfter the build completes the HTML documentation locates itself in the\n_builds/html directory and you can load the index.html into a web\nbrowser. To clean the documentation you can execute this command:"},{"objectID":"Contributing","href":"contributing.html#posting-issues","title":"Contributing > Posting issues","text":"Posting issues\n\nUse the PyAnsys Tools Report Issues page to\nsubmit questions, report bugs, and request new features."},{"objectID":"Contributing","href":"contributing.html#code-style","title":"Contributing > Code style","text":"Code style\n\nPyAnsys Tools Report is compliant with PyAnsys Development Code Style Guide.  Code style checks use\npre-commit. Install this tool and\nactivate it executing the following commands:\n\nThen, you can make used of the available configuration file .pre-commit-config.yml,\nwhich will be automatically detected by pre-commit:"},{"objectID":"Home","href":"getting_started/index.html#getting-started","title":"Getting started","text":"Getting started\n\nTo install pyansys-tools-report, carefully read all instructions on this page."},{"objectID":"Home","href":"getting_started/index.html#installation","title":"Getting started > Installation","text":"Installation\n\nThis package may be installed following two procedures: either the pip package manager installation or\nthe manual installation. The process to be followed for each of them is shown in the upcoming sections.\n\nThe pyansys-tools-report package currently supports Python >=3.10 on Windows, Mac OS, and Linux.\n\nInstall the latest release from PyPi with:\n\nAlternatively, install the latest from GitHub via:\n\nFor a local “development” version, install with (requires pip >= 22.0):"},{"objectID":"Home","href":"getting_started/index.html#offline-installation","title":"Getting started > Offline installation","text":"Offline installation\n\nIf you lack an internet connection on your install machine, the recommended way\nof installing PyAnsys Tools Report is downloading the wheelhouse archive from the\nReleases Page for your\ncorresponding machine architecture.\n\nEach wheelhouse archive contains all the python wheels necessary to install\nPyAnsys Tools Report from scratch on Windows and Linux for Python >=3.10. You can install\nthis on an isolated system with a fresh python or on a virtual environment.\n\nFor example, on Linux with Python 3.10, unzip it and install it with the following:\n\nIf you’re on Windows with Python 3.10, unzip to a wheelhouse directory and\ninstall using the same command as before.\n\nConsider installing using a virtual environment.\nMore information on general PyAnsys development can be found in the\nPyAnsys Developer’s Guide."},{"objectID":"Home","href":"getting_started/index.html#how-does-it-work","title":"Getting started > How does it work?","text":"How does it work?\n\nThis repository basically contains a simple Python package which you can import as follows\n(once installed):\n\nOnce imported, you can then start playing around with it:\n\nRefer to the ref_index_api to see the details of the module."},{"objectID":"Home","href":"api/index.html#api-reference","title":"API reference","text":"API reference\n\nThis is the API reference documentation for the pyansys-tools-report package\n\n\n\n\n\nPyAnsys Tools Report package.\n\n\n\nclass ansys.tools.report.Report(additional=None, ncol=3, text_width=80, sort=False, gpu=True, ansys_vars=None, ansys_libs=None)\n\nGenerate a scooby.Report instance.\n\nParameters\n\nadditional\n\npython:list(ModuleType), python:list(python:str), optional\n\nList of packages or package names to add to output information.\nDefaults to None.\n\nncol\n\npython:int, optional\n\nNumber of package-columns in html table; only has effect if\nmode='HTML' or mode='html'. Defaults to 3.\n\ntext_width\n\npython:int, optional\n\nThe text width for non-HTML display modes. Defaults to 80.\n\nsort\n\nbool, optional\n\nAlphabetically sort the packages. Defaults to False.\n\ngpu\n\nbool, optional\n\nGather information about the GPU. Defaults to True but if\nexperiencing rendering issues, pass False to safely generate\na report.\n\nansys_vars\n\npython:list of python:str, optional\n\nList containing the Ansys environment variables to be reported.\n(e.g. [“MYVAR_1”, “MYVAR_2” …]). Defaults to None.\n\nansys_libs\n\npython:dict {python:str\n\npython:str}, optional\n\nDictionary containing the Ansys libraries and versions to be reported.\n(e.g. {“MyLib” : “v1.2”, …}). Defaults to None.\n\n\n\nproject_info()\n\nReturn information regarding the Ansys environment and installation.\n\nReturns\n\npython:str\n\nThe project information (env variables and installation)\n\n\n\nansys.tools.report.version()\n\nReturn the version of the PyAnsys Report Tool.\n\nReturns\n\npython:str\n\nThe version of the tool being used."}]